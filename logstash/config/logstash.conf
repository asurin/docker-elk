input {
	tcp {
		port => 5000
	}
	beats {
		port => 5044
	}
}

## Add your filters / logstash plugins configuration here

filter {
	grok {
		match => [ "message", ".*\s(?<type>(plex|openvpn|minecraft-server|minecraft-overviewer))\[\d+\]:\s.*"]
	}
	if [type] == "plex" {
		grok {
			match => ["message", "<\d*>.+plex\[.+\]:.+\[.+\]\s(?<log_level>.+)\s-\s(?<log_content>.*)"]
		}
	} else if [type] == "openvpn" or [type] == "minecraft-server" {
		grok {
			match => ["message", "<\d*>.+(openvpn|minecraft-server)\[.+\]:\s(?<log_content>.*)"]
		}
	} else if [type] == "minecraft-overviewer" {
		grok {
			match => ["message", "<\d*>.+minecraft-overviewer\[.+\]:\s+\d+-\d+-\d+\s\d+:\d+:\d+\s+(?<log_content>.*)"]
		}
	} else if [type] == "minecraft-nginx" {
		if "access" in [tags] {
			grok {
    		pattern => "%{COMBINEDAPACHELOG}"
      }
      geoip {
        source => "clientip"
        target => "geoip"
        add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
        add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
      }
      mutate {
        add_field => [ "src_ip", "%{clientip}" ]
        convert => [ "[geoip][coordinates]", "float" ]
        replace => [ "@source_host", "%{host}" ]
        replace => [ "@message", "%{message}" ]
        rename => [ "verb" , "method" ]
      }
      grok {
        match => [
          "message", "%{DATA:apache_vhost} "
        ]
      }
		} else if "error" in [tags] {
			grok {
				match => [
					"message", "(?<timestamp>%{YEAR}[./-]%{MONTHNUM}[./-]%{MONTHDAY}[- ]%{TIME}) \[%{LOGLEVEL:severity}\] %{POSINT:pid}#%{NUMBER}: %{GREEDYDATA:errormessage}(?:, client: (?<clientip>%{IP}|%{HOSTNAME}))(?:, server: %{IPORHOST:server})(?:, request: %{QS:request}) ??(?:, host: %{QS:host})",
					"message", "(?<timestamp>%{YEAR}[./-]%{MONTHNUM}[./-]%{MONTHDAY}[- ]%{TIME}) \[%{LOGLEVEL:severity}\] %{POSINT:pid}#%{NUMBER}: %{GREEDYDATA:errormessage}(?:, client: (?<clientip>%{IP}|%{HOSTNAME}))(?:, server: %{IPORHOST:server})(?:, request: %{QS:request})(?:, upstream: %{QS:upstream})(?:;, host: %{QS:host})(?:, referrer: \"%{URI:referrer})"
				]
			}
		} else {
			drop { }
		}
	}
#	} else {
#		drop { }
#	}
}


output {
	elasticsearch {
		hosts => "elasticsearch:9200"
	}
}
