input {
	tcp {
		port => 5000
	}
	beats {
		port => 5044
	}
}

## Add your filters / logstash plugins configuration here

filter {
	grok {
		match => [ "message", ".*\s(?<type>(plex|openvpn|minecraft-server|minecraft-overviewer))\[\d+\]:\s.*"]
	}
	if [type] == "plex" {
		grok {
			match => ["message", "<\d*>.+plex\[.+\]:.+\[.+\]\s(?<log_level>.+)\s-\s(?<log_content>.*)"]
		}
	} else if [type] == "openvpn" or [type] == "minecraft-server" {
		grok {
			match => ["message", "<\d*>.+(openvpn|minecraft-server)\[.+\]:\s(?<log_content>.*)"]
		}
	} else if [type] == "minecraft-overviewer" {
		grok {
			match => ["message", "<\d*>.+minecraft-overviewer\[.+\]:\s+\d+-\d+-\d+\s\d+:\d+:\d+\s+(?<log_content>.*)"]
		}
	} else if [type] == "minecraft-nginx" {
		if "access" in [tags] {
			grok {
				match => ["message", "%{IPORHOST:clientip} %{NGUSER:ident} %{NGUSER:auth} \[%{HTTPDATE:timestamp}\] \"%{WORD:verb} %{URIPATHPARAM:request} HTTP/%{NUMBER:httpversion}\" %{NUMBER:response} (?:%{NUMBER:bytes}|-) (?:\"\(?:%{URI:referrer}|-)\"|%{QS:referrer}) %{QS:agent}"]
			}
		} else if "error" in [tags] {
			grok {
				match => ["message", "(?<timestamp>\d{4}/\d{2}/\d{2} \d{2}:\d{2}:\d{2}) \[%{DATA:nginx_severity}\] %{NOTSPACE} %{NOTSPACE} (?<nginx_message>(.|\r|\n)*)(?:, client: (?<nginx_client_ip>%{IP}|%{HOSTNAME}))(?:, server: %{IPORHOST:nginx_server})(?:, request: %{QS:nginx_request})?(?:, host: %{QS:nginx_host})?(?:, referrer: \"%{URI:nginx_referrer})?"]
			}
		} else {
			drop { }
		}
	}
#	} else {
#		drop { }
	}
}


output {
	elasticsearch {
		hosts => "elasticsearch:9200"
	}
}
