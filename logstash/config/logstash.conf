input {
	tcp {
		port => 5000
	}
	beats {
		port => 5044
	}
}

## Add your filters / logstash plugins configuration here

filter {
	grok {
		match => [ "message", ".*\s(?<type>(plex|openvpn|minecraft-server|minecraft-overviewer))\[\d+\]:\s.*"]
	}
	if [type] == "plex" {
		grok {
			match => ["message", "<\d*>.+plex\[.+\]:.+\[.+\]\s(?<log_level>.+)\s-\s(?<log_content>.*)"]
		}
	} else if [type] == "openvpn" or [type] == "minecraft-server" {
		grok {
			match => ["message", "<\d*>.+(openvpn|minecraft-server)\[.+\]:\s(?<log_content>.*)"]
		}
	} else if [type] == "minecraft-overviewer" {
		grok {
			match => ["message", "<\d*>.+minecraft-overviewer\[.+\]:\s+\d+-\d+-\d+\s\d+:\d+:\d+\s+(?<log_content>.*)"]
		}
	} else if [type] == "minecraft-nginx" {
		if "access" in [tags] {
			grok {
				match => [ "message" , "%{COMBINEDAPACHELOG}+%{GREEDYDATA:extra_fields}"]
				overwrite => [ "message" ]
			}
			mutate {
				convert => ["response", "integer"]
				convert => ["bytes", "integer"]
				convert => ["responsetime", "float"]
			}
			geoip {
				source => "clientip"
				target => "geoip"
				add_tag => [ "nginx-geoip" ]
			}
			date {
				match => [ "timestamp" , "dd/MMM/YYYY:HH:mm:ss Z" ]
				remove_field => [ "timestamp" ]
			}
			useragent {
				source => "agent"
			}
		} else if "error" in [tags] {
			grok {
				match => [ "message" , "(?<timestamp>%{YEAR}[./-]%{MONTHNUM}[./-]%{MONTHDAY}[- ]%{TIME}) \[%{LOGLEVEL:severity}\] %{POSINT:pid}#%{NUMBER}: %{GREEDYDATA:log_content}(?:, client: (?<client>%{IP}|%{HOSTNAME}))(?:, server: %{IPORHOST:server})(?:, request: %{QS:request})?(?:, upstream: \"%{URI:upstream}\")?(?:, host: %{QS:host})?(?:, referrer: \"%{URI:referrer}\")"]
				overwrite => [ "message" ]
			}
			geoip {
				source => "client"
				target => "geoip"
				add_tag => [ "nginx-geoip" ]
			}
			date {
				match => [ "timestamp" , "YYYY/MM/dd HH:mm:ss" ]
				remove_field => [ "timestamp" ]
			}
		} else {
			drop { }
		}
	}
#	} else {
#		drop { }
#	}
}


output {
	elasticsearch {
		hosts => "elasticsearch:9200"
	}
}
